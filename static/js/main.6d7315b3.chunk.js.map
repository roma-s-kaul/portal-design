{"version":3,"sources":["Components/Navbar.js","Components/Footer.js","Components/api.js","Components/TableComponent.js","Components/Network.js","Components/GraphComponent.js","Components/PageContent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","menuButton","marginRight","spacing","color","title","fontWeight","titleBar","boxShadow","loginButton","Navbar","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","width","bottom","left","display","justifyContent","background","temp","Footer","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","getdata","plan","targetUrl","fetch","then","response","ok","json","alert","Error","console","log","catch","ex","TableComponent","props","state","expanded","nodeId","data","additionalInfo","handleChange","bind","this","setState","prev","url","getAdditionalInfo","reply","panel","e","result","nodeData","companies","find","x","replace","nodeObj","Company_Name","NAICS_code","sector","displayData","createData","height","top","padding","heading","flexBasis","flexShrink","table","overflowWrap","rowKey","textAlign","rowValue","fontStyle","accord","borderRadius","marginBottom","fill","style","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","align","Object","keys","length","opencorporates","retrieved_at","updated_at","incorporation_date","jurisdiction_code","company_type","agent_address","current_status","company_number","registry_url","containerComponent","responsive","orientation","colorScale","borderPadding","right","name","labels","fontSize","symbol","Component","columns","minWidth","numeric","maxHeight","container","headerData","paper","visuallyHidden","border","clip","margin","overflow","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","map","column","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","descendingComparator","a","b","StickyHeadTable","networkData","setOrder","setOrderBy","Paper","TableContainer","Table","stickyHeader","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","links","getComparator","row","hover","role","tabIndex","code","format","alignItems","overflowY","edit","marginLeft","graph","transition","slider","svgTemp","toggleActive","GraphComponent","graphRef","createRef","businessPlan","view","myConfig","nodeHighlightBehavior","maxZoom","minZoom","initialZoom","panAndZoom","node","size","labelPosition","fontColor","highlightFontSize","link","highlightColor","renderLabel","opacity","type","d3","gravity","disableLinkForce","onClickNode","current","clientWidth","clientHeight","getData","linkObj","usableHeight","originXCoord","originYCoord","radius","Math","min","xCoord","yCoord","counter","degree","forEach","company","com","getNodeColor","sin","PI","cos","alignment","tempObj","companyName","naicsCode","y","push","minSim","similarity","start","sim","lineStyle","target","end","source","toFixed","nodes","focusedNodeId","currentTarget","config","graphData","transformData","ref","ToggleButtonGroup","exclusive","ToggleButton","LandingComponent","textState","boolState","setTextState","setBoolState","onToggle","FormControl","component","RadioGroup","FormControlLabel","control","Radio","TextField","textField","multiline","rows","button","ResultComponent","ButtonGroup","formGroup","resultContainer","marginTop","alignContent","PageContent","graphDimension","showResultState","setResultState","dimension","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6d7315b3.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n/* This file contains code for the Navigation bar */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"#373737\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1,\n    fontWeight: \"bold\"\n  },\n  titleBar: {\n    backgroundColor: \"#312f2f\",\n    boxShadow:  \"8px 8px 31px #141313, -8px -8px 31px #4e4b4b\"\n  },\n  loginButton: {\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className = {classes.titleBar}>\n          <IconButton edge=\"start\" className={classes.menuButton} aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            BOKN\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            ENTREPRENEURSHIP PORTAL\n          </Typography>\n          <Button className={classes.loginButton} color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n","import React from 'react'\nimport './Footer.css'\n//import 'bootstrap-css-only/css/bootstrap.min.css'; \n//import 'mdbreact/dist/css/mdb.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport QueuePlayNextIcon from '@material-ui/icons/QueuePlayNext';\nimport GroupIcon from '@material-ui/icons/Group';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: \"0\",\n    left: \"0\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    background: \"#373737\",\n    color: \"white\"\n  },\n  temp: {\n    color: \"white\"\n  }\n});\n\nconst Footer = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('recents');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction className={classes.temp} label=\"Watch video tutorials\" icon={<VisibilityIcon />} />\n      <BottomNavigationAction className={classes.temp} label=\"Additional Entrepreneurship Links\" icon={<QueuePlayNextIcon />} />\n      <BottomNavigationAction className={classes.temp} label=\"Business Open Knowledge Network Home\" icon={<HomeIcon />} />\n      <BottomNavigationAction className={classes.temp} label=\"Resources For Women Entrepreneurs\" icon={<FolderIcon />} />\n      <BottomNavigationAction className={classes.temp} label=\"Who are we and our mission\" icon={<GroupIcon />} />\n    </BottomNavigation>\n  );\n}\n\nexport default Footer;","export const getdata = (plan) => {\n    //var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    var targetUrl = `http://ckg03.isi.edu:8050/getneighborfrombusinessplan?businessplan=${plan}`;\n    //const xyz = await fetch(proxyUrl + targetUrl);\n    //const data = await xyz.json();\n    return fetch(targetUrl)\n   .then(function(response) {\n    //return response.json()\n    if (response.ok) {\n      return response.json();\n    } else {\n      alert('Unable to fetch response')\n      throw new Error('Something went wrong');\n    }\n   }).then(function(json) {\n     console.log('parsed json', json);\n     return json;\n   }).catch(function(ex) {\n     console.log('parsing failed', ex)\n   });\n\n };\n\n export const getAdditionalInfo = (url) => {\n  var targetUrl = `http://ckg03.isi.edu:8050/info?url=${url}`;\n    return fetch(targetUrl)\n   .then(function(response) {\n    //return response.json()\n    if (response.ok) {\n      return response.json();\n    } else {\n      alert('Unable to fetch response')\n      throw new Error('Something went wrong');\n    }\n   }).then(function(json) {\n     console.log('parsed json', json);\n     return json;\n   }).catch(function(ex) {\n     console.log('parsing failed', ex)\n   });\n }\n\nexport default getdata;","/*jshint esversion: 9 */\nimport React from 'react';\nimport './TableComponent.css';\nimport { getAdditionalInfo } from './api';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {VictoryLegend, VictoryContainer} from 'victory';\n//const additionalResponse = require('./clickResponse.json');\n\n/* This is for displaying the basic and additional information and the legend */\nconst tableStyles = (theme) => ({\n    root: {\n        position: \"relative\",\n        height: \"100%\",\n        top: \"0px\",\n        left: \"0px\",\n        padding: \"10px\"\n    },\n    heading: {\n        //fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    table: {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\",\n        overflowWrap: \"anywhere\"\n    },\n    rowKey: {\n        textAlign: \"left\",\n        width: \"33%\"\n    },\n    rowValue: {\n        textAlign: \"right\",\n        fontStyle: \"italic\",\n        width: \"67%\"\n    },\n    accord: {\n        boxShadow: \"5px 5px 10px #1d1e1e, -5px -5px 10px #272828\",\n        backgroundColor: \"rgb(34,35,35)\",\n        color: \"white\",\n        borderRadius: \"10px\",\n        //margin: \"20px 0\"\n        marginBottom: \"2rem\",\n        fill: \"white\"\n    }\n});\n\nclass TableComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { expanded: false, nodeId: \"My Plan\", response: this.props.data, additionalInfo: {}};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({nodeId: this.props.nodeId});\n        //getAdditionalInfo(this.state.nodeId).then((reply)=> this.setState({additionalInfo: reply}));\n    }\n\n    componentDidUpdate(prev) {\n        if(this.props.nodeId != prev.nodeId) {\n            getAdditionalInfo(this.props.nodeId).then((reply)=> this.setState({additionalInfo: reply}));\n        }\n    }\n\n    handleChange(panel, e) {\n        this.state.expanded ? this.setState({ expanded: false }) : this.setState({ expanded: panel });\n    };\n\n    createData() {\n        if ( !this.state.response.result ) return;\n        const nodeData = this.state.response.result.companies.find(function(x) {\n            return x.url.replace('www.', '') == this.props.nodeId;\n        }.bind(this));\n        var nodeObj = {}\n        nodeObj['companyName'] = nodeData.Company_Name || '-';\n        nodeObj['naicsCode'] = nodeData.NAICS_code || '-';\n        nodeObj['sector'] = nodeData.sector || '-';\n        nodeObj['url'] = nodeData.url || '-';\n        return nodeObj;\n    }\n\n    render() {\n        //const { users } = this.state;\n        const displayData = this.createData();\n        //const additionalData = this.createAdditionalData(additionalResponse.opencorporates)\n        //if(this.props.nodeId != \"My Plan\")\n          //  var temp = getAdditionalInfo(this.props.nodeId).then((reply)=> this.setState({additionalInfo: reply}));\n        const classes = tableStyles();\n        let additionalResponse = this.state.additionalInfo;\n        debugger;\n        return (\n            <div style={classes.root}>\n                <h4>{this.props.nodeId}</h4>\n                {displayData ? \n                    (<Accordion style={classes.accord} expanded={this.state.expanded === 'panel1'} value='panel1' onChange={(e) => this.handleChange(\"panel1\", e)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\" >\n                            <Typography className={classes.heading}>Basic Information</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n\n                            <table style={classes.table}>\n                                <tr>\n                                    <td style = {classes.rowKey}>Company Name</td>\n                                    <td style = {classes.rowValue} align=\"right\">{displayData['companyName']}</td>\n                                </tr>\n                                <tr>\n                                    <td style = {classes.rowKey}>URL</td>\n                                    <td style = {classes.rowValue} align=\"right\">{displayData['url']}</td>\n                                </tr>\n                                <tr>\n                                    <td style = {classes.rowKey}>Sector</td>\n                                    <td style = {classes.rowValue} align=\"right\">{displayData['sector']}</td>\n                                </tr>\n                                <tr>\n                                    <td style = {classes.rowKey}>NAICS Code</td>\n                                    <td style = {classes.rowValue} align=\"right\">{displayData['naicsCode']}</td>\n                                </tr>\n                            </table>\n                        </AccordionDetails>\n                    </Accordion>) : ''\n                }\n                {(this.state.additionalInfo && Object.keys(this.state.additionalInfo).length != 0 && (this.state.additionalInfo.opencorporates != null)) ? \n                (<Accordion style={classes.accord} expanded={this.state.expanded === 'panel2'} value='panel2' onChange={(e) => this.handleChange(\"panel2\", e)}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2bh-content\" id=\"panel2bh-header\" >\n                        <Typography className={classes.heading}>Additional Information</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n\n                        <table style={classes.table}>\n                            <tr>\n                                <td style = {classes.rowKey}>Agent Name</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo['opencorporates']['agent_name'] || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Retrieved At</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.retrieved_at || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Updated At</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.updated_at || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Incorporation Date</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.incorporation_date || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Jurisdiction Code</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.jurisdiction_code || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Company Type</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.company_type || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Agent Address</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.agent_address || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Current Status</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.current_status || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Company Number</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.company_number || '-'}</td>\n                            </tr>\n                            <tr>\n                                <td style = {classes.rowKey}>Registry Url</td>\n                                <td style = {classes.rowValue} align=\"right\">{this.state.additionalInfo.opencorporates.registry_url || '-'}</td>\n                            </tr>\n                        </table>\n\n                    </AccordionDetails>\n                </Accordion>) : ''\n                }   \n                <h4>Legend</h4>\n                    <VictoryLegend\n                        height=\"750\"\n                        containerComponent={<VictoryContainer responsive={true}/>}\n                        orientation=\"vertical\"\n                        colorScale={[ \"#68bdf6\", \"#6dce9e\", \"#faafc2\", \"#f2baf6\", \"#ff928c\", \"#fcea7e\", \"#ffc766\", \"#405f9e\",\n                                        \"#a5abb6\", \"#78cecb\", \"#b88cbb\", \"black\", \"blue\", \"orange\", \"pink\", \"white\", \"yellow\",\n                                        \"green\" ]}\n                        borderPadding={{ bottom: 10, left: 20, right: 20 }}\n                        data={[{ name: \"Automobiles\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"pink\" }},\n                            { name: \"Banks\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#6dce9e\" }},\n                            { name: \"Chemicals\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"blue\" }},\n                            { name: \"Construction and Construction\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#ff928c\" }}, \n                            { name: \"Consumer Durables\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#ffc766\" }}, \n                            { name: \"Drugs\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#b88cbb\" }},\n                            { name: \"Fabricated Products\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#405f9e\" }},\n                            { name: \"Food\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#fcea7e\" }},\n                            { name: \"Machinery and Business Equipme\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#f2baf6\" }},\n                            { name: \"Mining and Minerals\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"white\" }},\n                            { name: \"Oil and Petroleum Products\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"orange\" }},\n                            { name: \"Other\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#68bdf6\" }},\n                            { name: \"Retail Stores\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#78cecb\" }}, \n                            { name: \"Steel Works Etc\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"black\" }},\n                            { name: \"Textiles\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#a5abb6\" }},\n                            { name: \"Transportation\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"#faafc2\" }},\n                            { name: \"Utilities\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"yellow\" }}, \n                            { name: \"Undefined\", labels: { fill: \"white\", fontSize: 18}, symbol: { fill: \"green\" }}]}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default TableComponent;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport './Network.css';\n\n/* This file contains code for displaying the graph in tabular form */\n\nconst columns = [\n  { id: 'source', label: 'Company Name', minWidth: 170, numeric: false, },\n  { id: 'target', label: 'Similar Company', minWidth: 170, numeric: false, },\n  { id: 'label', label: 'Similarity Value', minWidth: 170, numeric: false}\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    maxHeight: 440,\n  },\n  container: {\n    //backgroundColor: '#222222',\n    backgroundColor: 'white',\n    boxShadow: \"5px 5px 10px #1d1d1d, -5px -5px 10px #272727; !important\",\n    height: '100%'\n  },\n  data: {\n      color: 'white',\n      fill: 'white',\n  },\n  headerData: {\n    color: 'white',\n    fill: 'white',\n    fontWeight: 'bold'\n  },\n  paper: {\n    width: '100%'\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  }\n});\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((column) => (\n          <TableCell\n            className = {classes.headerData}\n            key={column.id}\n            align={column.numeric ? 'right' : 'left'}\n            padding='default'\n            sortDirection={orderBy === column.id ? order : false}\n          >\n            <TableSortLabel\n              className = {classes.headerData}\n              active={orderBy === column.id}\n              direction={orderBy === column.id ? order : 'asc'}\n              onClick={createSortHandler(column.id)}\n            >\n              {column.label}\n              {orderBy === column.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\n/* Table properties */\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired\n};\n\n/* Order of sorting. Sorting can be done on any of the 3 columns - source, target, similarity value */\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\nexport default function StickyHeadTable(networkData) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('simVal');\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  \n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n            {stableSort(networkData.data.links, getComparator(order, orderBy)).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell className={classes.data} key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}","/*jshint esversion: 9 */\nimport React, {Component} from 'react';\nimport { Graph } from 'react-d3-graph';\nimport TableComponent from './TableComponent';\nimport StickyHeadTable from './Network';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport './GraphComponent.css';\nimport getData  from './api';\n\n/* This file contains code to control the graph and re-render the table component */\n\n\n//This is to set the css properties\nconst temp = {\n    root: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"stretch\",\n        //height: \"37rem\",\n        height: \"calc(100vh - 291px)\",\n        overflowY: \"scroll\"\n      },\n      edit: {\n          position: \"absolute\",\n          color: 'blue',\n          marginLeft: \"2%\",\n          backgroundColor: \"white\"\n      },\n      graph: {\n            width: \"70%\",\n            boxShadow: \"4px -4px 8px 0 rgba(0,0,0,0.5)\",\n            transition: \"0.3s\",\n            color: \"white\",\n            backgroundColor: \"rgb(49 47 47)\",\n            marginRight: \"5px\",\n            borderRadius: \"5px\",\n            padding: \"1rem\"\n      },\n      additionalInfo: {\n        width: \"30%\",\n        boxShadow: \"4px -4px 8px 0 rgba(0,0,0,0.5)\",\n        transition: \"0.3s\",\n        color: \"white\",\n        backgroundColor: \"rgb(49 47 47)\",\n        marginLeft: \"5px\",\n        borderRadius: \"5px\",\n        overflowY: \"scroll\"\n      },\n      slider: {\n        width: \"300px\",\n      },\n      svgTemp: {\n        fill: \"black\"\n      },\n      toggleActive: {\n          fill: \"white\"\n      }\n}\n\nclass GraphComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.graphRef = React.createRef();\n        \n        this.state = { \n            response: {},\n            businessPlan: this.props.businessPlan,\n            view: \"graph\",\n            nodeId: \"My Plan\",\n            //This is the configuration passed to the d3 component\n            myConfig:  {\n                nodeHighlightBehavior: true,\n                maxZoom: 1,\n                //focusZoom: 1,\n                minZoom: 0.1,\n                initialZoom: 1,\n                panAndZoom: true,\n                height: 400,\n                width: 600,\n                node: {\n                    size: 200,\n                    fontSize: 12,\n                    labelPosition: \"left\",\n                    fontColor: \"white\",\n                    highlightFontSize: 18\n                },\n                link: {\n                    highlightColor: \"red\",\n                    color: 'white',\n                    renderLabel: true,\n                    fontSize: 12,\n                    opacity : 1,\n                    fontColor: 'wheat',\n                    type: 'STRAIGHT'\n                },\n                d3: {\n                    gravity: -1000,\n                    disableLinkForce: true,\n                }\n            }\n        };\n        \n        this.onClickNode = this.onClickNode.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // This is to get the height and width of the svg to make it responsive with the screen height and width\n    componentDidMount() {\n        var myConfig = {...this.state.myConfig};\n        myConfig.width = this.graphRef.current.clientWidth;\n        myConfig.height = this.graphRef.current.clientHeight - 51 - 32;\n\n        this.setState({myConfig});\n        getData(this.state.businessPlan).then((reply)=> this.setState({response: reply}));\n    }\n    \n    // This is to get the coordinates of each of the nodes. It can be extended to include dynamic node setting as well.\n    transformData() {\n        var nodeObj = [];\n        var linkObj = [];\n        //fetch('').then(response => \n            //response.json().then(data => {\n        var maxPoints = 10\n        var usableHeight = this.state.myConfig.height \n        var usableWidth = this.state.myConfig.width\n        var originXCoord = usableWidth / 2\n        var originYCoord = usableHeight / 2\n        var radius = Math.min(originXCoord, originYCoord)\n        var startDegree = -90\n        var jumpDegree = 360 / maxPoints\n        var xCoord = originXCoord\n        var yCoord = originYCoord\n        var counter = 0\n        var degree = 0;\n// For semicircle make `originYCoord = usableHeight` and `jumpDegree = 180 / maxPoints`\n        if(!this.state.response || !this.state.response.result) return null; \n        this.state.response.result.companies.forEach(company => {\n            var com = company.url.replace('www.', '');\n            var color = this.getNodeColor(company);\n            //mpPlan do nothing\n            var companyName = '';\n            if(counter != 0) {\n                degree = startDegree + (counter * jumpDegree)\n                xCoord = originXCoord + (radius * Math.sin((Math.PI * degree) / 180))\n                yCoord = originYCoord + (radius * Math.cos((Math.PI * degree) / 180))\n            }\n            var alignment = 'left';\n            if(xCoord > originXCoord) {\n                alignment = 'right';\n            }\n            if(counter == 0) {\n                alignment = 'bottom';\n            }\n            \n            counter += 1\n\n            var tempObj = {\n                id: com,\n                companyName: company.Company_Name,\n                url: company.url,\n                naicsCode: company.NAICS_code,\n                sector: company.sector,\n                color: color,\n                x: xCoord,\n                y: yCoord,\n                labelPosition: alignment\n            }\n            nodeObj.push(tempObj);\n        });\n        \n        /* This is to filter out the in-between edges. */\n        var minSim = 1\n        Object.keys(this.state.response.result.similarity).forEach(key => {\n            if(this.state.response.result.similarity[key].start == 'My Plan' && minSim > (this.state.response.result.similarity[key].sim))\n                minSim = (this.state.response.result.similarity[key].sim);\n        });\n        Object.keys(this.state.response.result.similarity).forEach(key => {\n            var similarity = (this.state.response.result.similarity[key].sim);\n            var lineStyle = 'STRAIGHT';\n            if((this.state.response.result.similarity[key].start) != 'My Plan') {\n                lineStyle = 'CURVE_SMOOTH';\n            }\n            if(similarity >= minSim) {\n                var tempObj = {\n                    target: this.state.response.result.similarity[key].end,\n                    source: this.state.response.result.similarity[key].start,\n                    label: (this.state.response.result.similarity[key].sim).toFixed(2),\n                    type: lineStyle\n                }\n                linkObj.push(tempObj);\n            }\n            \n        });\n        \n        return {\n                nodes: nodeObj,\n                links: linkObj,\n                focusedNodeId: 'My Plan'\n        };\n    }\n    \n    onClickNode (id) {\n        this.setState({nodeId: id});\n    }\n\n    valuetext(value) {\n        return `${value}`;\n    }\n\n    handleChange(event) {\n        this.setState({view: event.currentTarget.value});\n    }\n\n    getNodeColor(node) {\n        switch(node.sector) {\n            case \"Other\":\n                return '#68bdf6';\n            case \"Banks\":\n                return '#6dce9e';\n            case \"Transportation\":\n                return '#faafc2';\n            case \"Machinery and Business Equipme\":\n                return '#f2baf6';\n            case \"Construction and Construction\":\n                return '#ff928c';\n            case \"Food\":\n                return '#fcea7e';\n            case \"Consumer Durables\":\n                return '#ffc766';\n            case \"Fabricated Products\":\n                return '#405f9e';\n            case \"Textiles\":\n                return '#a5abb6';\n            case \"Retail Stores\":\n                return '#78cecb';\n            case \"Drugs\":\n                return '#b88cbb';\n            case \"Steel Works Etc\":\n                return 'black';\n            case \"Chemicals\":\n                return 'blue';\n            case \"Oil and Petroleum Products\":\n                return 'orange';\n            case \"Automobiles\":\n                return 'pink';\n            case \"Mining and Minerals\":\n                return 'white';\n            case \"Utilities\":\n                return 'yellow';\n            default:\n                return 'green';\n        }\n    }\n\n    \n    render() {\n        let config = this.state.myConfig;\n        const graphData = this.transformData();\n        return (\n            <div style={temp.root}>\n                    <div style={temp.graph} ref={this.graphRef}>\n                    <div>\n                        <ToggleButtonGroup orientation=\"horizontal\" value={this.view} exclusive>\n                            <ToggleButton  value=\"graph\" aria-label=\"graph\" onClick={this.handleChange}>\n                                <AcUnitIcon style={this.state.view == \"graph\" ? temp.toggleActive : temp.svgTemp} />\n                            </ToggleButton>\n                            <ToggleButton  value=\"network\" aria-label=\"network\" onClick={this.handleChange}>\n                                <StorageIcon style={this.state.view == \"network\" ? temp.toggleActive : temp.svgTemp}/>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n                        {graphData ? (this.state.view === \"graph\") ? \n                        <Graph id=\"graph-id\" data={graphData} config={config} \n                        onClickNode={(nodeId) => this.onClickNode(nodeId)}/>\n                         : <StickyHeadTable data = {graphData}/> : \"\"}\n                    </div>\n                <div style={temp.additionalInfo} >\n                    {graphData ? \n                    <TableComponent nodeId={this.state.nodeId} data = {this.state.response}/> : ''}\n                </div>\n            </div>\n        \n        )}\n\n}\n\nexport default GraphComponent;","import React, {useState, useEffect} from 'react';\nimport './PageContent.css'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport GraphComponent from './GraphComponent';\n\n/* decide whether to display the Landing page or the result page */\n\n/* Enter the business idea page */\nconst LandingComponent = ({textState, boolState, setTextState, setBoolState, onToggle}) => {\n    const classes = useStyles();\n    return(\n        <div>\n            <div className='tester'>\n                <h3>What is your starting point?</h3>\n            </div>\n            <div className=\"container\">\n                <FormControl style={{width: \"100%\"}}component=\"fieldset\">\n                    <RadioGroup aria-label=\"startingPoint\" name=\"options\" value={boolState} onChange={e => setBoolState(e.target.value)}>\n                        <FormControlLabel value=\"option1\" control={<Radio />} label=\"I will describe my product idea\" />\n                        <FormControlLabel value=\"option2\" control={<Radio />} label=\"I will describe a technology I want to commercialize\" />\n                    </RadioGroup>\n                    \n                    <TextField  className ={classes.textField} value = {textState} onChange = {e => setTextState(e.target.value)} id=\"outlined-multiline-static\" label=\"Enter description\" \n                                multiline rows={4} variant=\"outlined\"/>\n                    \n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={onToggle}> Get Market Intelligence </Button>\n                </FormControl>\n            </div>\n        </div>\n    );\n}\n\n/* result component - Market intelligence page */\nconst ResultComponent = ({onToggle, plan}) => {\n    const classes = useStyles(); \n    return(\n        <div>\n            <div className='tester'>\n                <h3>Market Intelligence Results</h3>\n                <div>\n                <ButtonGroup size=\"small\" aria-label=\"large outlined primary button group\">\n                    <Button>Graph</Button>\n                    <Button>Setting</Button>\n                    <Button>Legend</Button>\n                    <Button>Export</Button>\n                </ButtonGroup>\n                </div>\n            </div>\n            <div className={classes.formGroup}>\n                <div className = {classes.edit}>\n                    <IconButton aria-label=\"edit\" onClick={onToggle}><EditTwoToneIcon fontSize=\"small\" color=\"#90caf9\"/></IconButton>\n                </div>\n                 <div className={classes.root}>\n                    <ButtonGroup size=\"small\" aria-label=\"large outlined primary button group\">\n                        <Button>Competitors</Button>\n                        <Button>Customers</Button>\n                        <Button>Technologies</Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n            <div className = {classes.resultContainer}>\n                <GraphComponent businessPlan={plan}/>\n            </div>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: \"16px 0px\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#312f2f\",\n         display: \"flex\",\n         justifyContent: \"center\"\n    },\n    resultContainer: {\n        height: \"calc(100%)\",\n        marginTop: \"1.25rem\",\n        width: \"100%\",\n        height: \"528px\"\n    },\n    button: {\n        marginTop: \"2rem\",\n        backgroundColor: \"#90caf9\",\n        color: \"black\"\n    },\n    formGroup: {\n        display: \"flex\",\n        alignItems: \"center\",\n        alignContent: \"center\"\n    },\n    textField: {\n        marginTop: \"2rem\",\n        width: \"40%\",\n        color:\"white\"\n    }\n}));\n\n/* Decide which content to display */\nconst PageContent = ({graphDimension}) => {\n    const [showResultState, setResultState] = useState(true);\n    const [textState, setTextState] = useState('');\n    const [boolState, setBoolState] = useState('option1');\n    \n    \n    const classes = useStyles();\n    return (\n        <div className=\"parent\">\n            \n            <div className=\"page-container\">\n                { \n                    showResultState ? \n                        <LandingComponent textState={textState} boolState={boolState} setTextState={setTextState} setBoolState={setBoolState} onToggle={() => setResultState(!showResultState)} /> \n                            : \n                        <ResultComponent onToggle={() => setResultState(!showResultState)} dimension={graphDimension} plan={textState}/> \n                } \n            </div>\n        </div>\n      );\n\n}\nexport default PageContent;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\nimport PageContent from './Components/PageContent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <PageContent/>\n        <Footer/>\n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}